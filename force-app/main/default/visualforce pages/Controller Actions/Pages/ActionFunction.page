<!--
  @description       : A component that provides support for invoking controller action methods directly from JavaScript code 
                       using an AJAX request. 
  @author            : Dayene Vale
  @last modified on  : 02-23-2023
-->
<apex:page controller="ActionController" sidebar="false" showHeader="false" LightningStylesheets="true">
    <apex:form >
        <apex:pageBlock>
            <apex:pageBlockSection title="Page" columns="2">
                <p>Calls an action when the page is loaded.</p>
            </apex:pageBlockSection>
            <apex:pageBlockSection title="Action Function" columns="2">
                <p>A component that provides support for invoking controller action methods directly from JavaScript code using an AJAX request.</p>
                <apex:actionFunction name="sayHello" action="{!sayHello}" rerender="out" status="myStatus"/>
                <apex:outputPanel id="out">
                    <apex:outputText value="Hello "/>
                    <apex:actionStatus startText="requesting..." id="myStatus">
                        <apex:facet name="stop">{!username}</apex:facet>
                    </apex:actionStatus><br/><br/>
                </apex:outputPanel>
                <script type="text/javascript">
                	window.setTimeout(sayHello,2000)
                </script>
                <apex:outputPanel style="border-style:dotted; padding:3px;" onclick="methodOneInJavascript('Yes!')" styleClass="btn"> 
                    Click Me 
                </apex:outputPanel>
                <p><apex:outputText value="Clicked? {!state}" id="showstate" /></p> 
                <apex:actionFunction action="{!methodOne}" name="methodOneInJavascript" rerender="showstate">
                    <apex:param name="firstParam" assignTo="{!state}" value="" />
                </apex:actionFunction>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
</apex:page>